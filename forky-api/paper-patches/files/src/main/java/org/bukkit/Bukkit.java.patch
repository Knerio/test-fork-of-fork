--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -14,6 +_,8 @@
 import java.util.UUID;
 import java.util.function.Consumer;
 import java.util.logging.Logger;
+import de.varilx.core.common.CommonAPI;
+import de.varilx.core.common.translation.Locale;
 import org.bukkit.Warning.WarningState;
 import org.bukkit.advancement.Advancement;
 import org.bukkit.block.data.BlockData;
@@ -126,6 +_,13 @@
         // Paper end
     }
 
+    //Varilx Start
+    public static @NotNull  CommonAPI getVarilxCommon() {
+        return getServer().getVarilxCommon();
+    }
+
+    //Varilx End
+
     /**
      * Gets the name of this server implementation.
      *
@@ -1453,6 +_,39 @@
         server.shutdown();
     }
 
+    // Varilx Start
+
+    /**
+     * Sends a translated broadcast message based on the specified message key and arguments.
+     *
+     * This method uses the server instance to perform the broadcast.
+     *
+     * @param messageKey The key for the broadcast message translation.
+     * @param args The arguments to be used in the translation.
+     * @return An integer representing the result of the broadcast operation.
+     */
+    public static int translatedBroadcast(@NotNull String messageKey, @NotNull Object... args) {
+        return server.translatedBroadcast(messageKey, args);
+    }
+
+    /**
+     * Sends a translated broadcast message based on the specified message key, project, locale, and arguments.
+     *
+     * This method uses the server instance to perform the broadcast.
+     *
+     * @param messageKey The key for the broadcast message translation.
+     * @param project The name of the project used for translation context.
+     * @param locale The locale to use for translation.
+     * @param args The arguments to be used in the translation.
+     * @return An integer representing the result of the broadcast operation.
+     */
+    public static int translatedBroadcast(@NotNull String messageKey, @NotNull String project, @NotNull Locale locale, @NotNull Object... args) {
+        return server.translatedBroadcast(messageKey, project, locale, args);
+    }
+
+
+    // Varilx End
+
     // Paper start
     /**
      * Broadcast a message to all players.
@@ -1918,6 +_,49 @@
     public static Inventory createInventory(@Nullable InventoryHolder owner, int size, @NotNull String title) throws IllegalArgumentException {
         return server.createInventory(owner, size, title);
     }
+
+
+    // Varilx - Start
+
+    /**
+     * Creates a translated inventory
+     * @param owner the owner
+     * @param titleKey the titlekey
+     * @return the inventory
+     * @see Bukkit#createInventory(InventoryHolder, InventoryType, net.kyori.adventure.text.Component)
+     */
+    @NotNull
+    public static Inventory createTranslatedInventory(@Nullable InventoryHolder owner, int size, @NotNull String titleKey, @NotNull Object@NotNull ... args) {
+        return server.createTranslatedInventory(owner, size, titleKey, args);
+    }
+
+    /**
+     * Creates a translated inventory
+     * @param owner the owner
+     * @param titleKey the titlekey
+     * @return the inventory
+     * @see Bukkit#createInventory(InventoryHolder, InventoryType, net.kyori.adventure.text.Component)
+     */
+    @NotNull
+    public static Inventory createTranslatedInventory(@Nullable InventoryHolder owner, int size, @NotNull String titleKey, @NotNull String project,@NotNull  Object@NotNull ... args) {
+        return server.createTranslatedInventory(owner, size, titleKey, project, args);
+    }
+
+    /**
+     * Creates a translated inventory
+     * @param owner the owner
+     * @param titleKey the titlekey
+     * @param locale the locale
+     * @param project the project
+     * @return the inventory
+     * @see Bukkit#createInventory(InventoryHolder, InventoryType, net.kyori.adventure.text.Component)
+     */
+    @NotNull
+    public static Inventory createTranslatedInventory(@Nullable InventoryHolder owner, int size, @NotNull String titleKey, @NotNull String project, @NotNull Locale locale,@NotNull  Object@NotNull ... args) {
+        return server.createTranslatedInventory(owner, size, titleKey, project, locale, args);
+    }
+
+    // Varilx - End
 
     // Paper start
     /**
