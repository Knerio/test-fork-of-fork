--- a/src/main/java/org/bukkit/inventory/meta/ItemMeta.java
+++ b/src/main/java/org/bukkit/inventory/meta/ItemMeta.java
@@ -5,6 +_,7 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
+import de.varilx.core.common.translation.Locale;
 import net.kyori.adventure.text.Component;
 import org.bukkit.NamespacedKey;
 import org.bukkit.Tag;
@@ -40,6 +_,7 @@
 public interface ItemMeta extends Cloneable, ConfigurationSerializable, PersistentDataHolder {
 
     // Paper start
+
     /**
      * Checks for existence of a custom name.
      *
@@ -63,6 +_,27 @@
      */
     void customName(final net.kyori.adventure.text.@Nullable Component customName);
 
+
+    // Varilx - Start
+
+    /**
+     * Set a custom name with translations
+     * @param messageKey the message key
+     * @param args the arguments
+     */
+    void customTranslationName(@NotNull String messageKey, @NotNull Object... args);
+
+
+    /**
+     * Sets the custom name with translation
+     * @param messageKey the message key
+     * @param project the project
+     * @param args the args
+     */
+    void customTranslationName(@NotNull String messageKey, @NotNull String project, @NotNull Locale locale, @NotNull Object @NotNull ... args);
+
+    // Varilx - End
+
     /**
      * Checks for existence of a display name.
      *
@@ -113,6 +_,7 @@
     String getDisplayName();
 
     // Paper start
+
     /**
      * Gets the display name that is set.
      * <p>
@@ -126,16 +_,19 @@
     @Deprecated
     net.md_5.bungee.api.chat.BaseComponent[] getDisplayNameComponent();
     // Paper end
+
     /**
      * Sets the display name.
      *
      * @param name the name to set
      * @deprecated in favour of {@link #displayName(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated
+    // Paper
     void setDisplayName(@Nullable String name);
 
     // Paper start
+
     /**
      * Sets the display name.
      *
@@ -145,6 +_,7 @@
     @Deprecated
     void setDisplayNameComponent(@Nullable net.md_5.bungee.api.chat.BaseComponent[] component);
     // Paper end
+
     /**
      * Checks for existence of an item name.
      * <br>
@@ -156,6 +_,7 @@
     boolean hasItemName();
 
     // Paper start
+
     /**
      * Gets the item name component that is set.
      * <br>
@@ -181,6 +_,7 @@
      */
     void itemName(@Nullable final Component name);
     // Paper end
+
     /**
      * Gets the item name that is set.
      * <br>
@@ -206,7 +_,8 @@
      * @param name the name to set
      * @deprecated in favour of {@link #itemName(Component)}
      */
-    @Deprecated // Paper
+    @Deprecated
+    // Paper
     void setItemName(@Nullable String name);
 
     /**
@@ -251,6 +_,7 @@
     boolean hasLore();
 
     // Paper start
+
     /**
      * Gets the lore.
      *
@@ -266,6 +_,28 @@
      * @param lore the lore to set
      */
     void lore(final @Nullable List<? extends net.kyori.adventure.text.Component> lore);
+
+    // Varilx - Start
+
+    /**
+     * Sets the translations lore
+     * @param loreKey the lore
+     * @param args the args
+     * @see #translationsLore(String, String, Locale, Object...)
+     */
+    void translationsLore(@NotNull String loreKey, @NotNull Object @NotNull ... args);
+
+    /**
+     * Sets the translations lore
+     * @param loreKey the lore
+     * @param project the project
+     * @param locale the locale
+     * @param args the args
+     */
+    void translationsLore(@NotNull String loreKey, @NotNull String project, @NotNull Locale locale, @NotNull Object @NotNull ... args);
+
+    // Varilx - End
+
     // Paper end
 
     /**
@@ -301,7 +_,8 @@
      * @param lore the lore that will be set
      * @deprecated in favour of {@link #lore(List)}
      */
-    @Deprecated // Paper
+    @Deprecated
+    // Paper
     void setLore(@Nullable List<String> lore);
 
     /**
@@ -947,7 +_,7 @@
      * This will return false if nothing was removed.
      *
      * @param attribute attribute to remove
-     * @return  true if all modifiers were removed from a given
+     * @return true if all modifiers were removed from a given
      *                  Attribute. Returns false if no attributes were
      *                  removed.
      * @throws NullPointerException if Attribute is null
@@ -1055,7 +_,7 @@
      * Internal use only! Do not use under any circumstances!
      *
      * @param version version
-     * @apiNote  internal use only
+     * @apiNote internal use only
      */
     @ApiStatus.Internal
     void setVersion(int version);
@@ -1065,6 +_,7 @@
     ItemMeta clone();
 
     // Paper start - Add an API for can-place-on/can-break adventure mode predicates
+
     /**
      * Gets set of materials what given item can destroy in {@link org.bukkit.GameMode#ADVENTURE}
      *
