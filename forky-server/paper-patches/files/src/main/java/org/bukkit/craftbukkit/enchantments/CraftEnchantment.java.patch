--- a/src/main/java/org/bukkit/craftbukkit/enchantments/CraftEnchantment.java
+++ b/src/main/java/org/bukkit/craftbukkit/enchantments/CraftEnchantment.java
@@ -1,12 +_,11 @@
 package org.bukkit.craftbukkit.enchantments;
 
 import com.google.common.base.Preconditions;
-import io.papermc.paper.registry.RegistryKey;
-import io.papermc.paper.util.Holderable;
 import java.util.Locale;
 import net.minecraft.Util;
 import net.minecraft.core.Holder;
 import net.minecraft.core.registries.Registries;
+import net.minecraft.network.chat.contents.TranslatableContents;
 import net.minecraft.tags.EnchantmentTags;
 import org.bukkit.NamespacedKey;
 import org.bukkit.Registry;
@@ -14,15 +_,16 @@
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.craftbukkit.legacy.FieldRename;
 import org.bukkit.craftbukkit.util.ApiVersion;
+import org.bukkit.craftbukkit.util.Handleable;
 import org.bukkit.enchantments.Enchantment;
 import org.bukkit.enchantments.EnchantmentTarget;
 import org.bukkit.enchantments.EnchantmentWrapper;
 import org.bukkit.inventory.ItemStack;
 
-public class CraftEnchantment extends Enchantment implements Holderable<net.minecraft.world.item.enchantment.Enchantment> {
+public class CraftEnchantment extends Enchantment implements Handleable<net.minecraft.world.item.enchantment.Enchantment> {
 
     public static Enchantment minecraftToBukkit(net.minecraft.world.item.enchantment.Enchantment minecraft) {
-        return CraftRegistry.minecraftToBukkit(minecraft, Registries.ENCHANTMENT);
+        return CraftRegistry.minecraftToBukkit(minecraft, Registries.ENCHANTMENT, Registry.ENCHANTMENT);
     }
 
     public static Enchantment minecraftHolderToBukkit(Holder<net.minecraft.world.item.enchantment.Enchantment> minecraft) {
@@ -53,23 +_,25 @@
         NamespacedKey key = NamespacedKey.fromString(string);
 
         // Now also convert from when keys where saved
-        return CraftRegistry.get(RegistryKey.ENCHANTMENT, key, ApiVersion.CURRENT);
+        return CraftRegistry.get(Registry.ENCHANTMENT, key, ApiVersion.CURRENT);
     }
 
+    private final NamespacedKey key;
     private final Holder<net.minecraft.world.item.enchantment.Enchantment> handle;
 
-    public CraftEnchantment(Holder<net.minecraft.world.item.enchantment.Enchantment> holder) {
-        this.handle = holder;
+    public CraftEnchantment(NamespacedKey key, net.minecraft.world.item.enchantment.Enchantment handle) {
+        this.key = key;
+        this.handle = CraftRegistry.getMinecraftRegistry(Registries.ENCHANTMENT).wrapAsHolder(handle);
     }
 
     @Override
-    public Holder<net.minecraft.world.item.enchantment.Enchantment> getHolder() {
-        return this.handle;
+    public net.minecraft.world.item.enchantment.Enchantment getHandle() {
+        return this.handle.value();
     }
 
     @Override
     public NamespacedKey getKey() {
-        return Holderable.super.getKey();
+        return this.key;
     }
 
     @Override
@@ -249,16 +_,24 @@
 
     @Override
     public boolean equals(Object other) {
-        return Holderable.super.implEquals(other);
+        if (this == other) {
+            return true;
+        }
+
+        if (!(other instanceof CraftEnchantment)) {
+            return false;
+        }
+
+        return this.getKey().equals(((Enchantment) other).getKey());
     }
 
     @Override
     public int hashCode() {
-        return Holderable.super.implHashCode();
+        return this.getKey().hashCode();
     }
 
     @Override
     public String toString() {
-        return Holderable.super.implToString();
+        return "CraftEnchantment[" + this.getKey() + "]";
     }
 }
