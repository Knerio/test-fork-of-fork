--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -13,6 +_,7 @@
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import com.mojang.serialization.Dynamic;
 import com.mojang.serialization.Lifecycle;
+import de.varilx.core.common.CommonAPI;
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
 import java.awt.image.BufferedImage;
 import java.io.ByteArrayOutputStream;
@@ -319,6 +_,8 @@
     private final io.papermc.paper.threadedregions.scheduler.FoliaAsyncScheduler asyncScheduler = new io.papermc.paper.threadedregions.scheduler.FoliaAsyncScheduler();
     private final io.papermc.paper.threadedregions.scheduler.FoliaGlobalRegionScheduler globalRegionScheduler = new io.papermc.paper.threadedregions.scheduler.FoliaGlobalRegionScheduler();
 
+    private final CommonAPI commonAPI;
+
     @Override
     public final io.papermc.paper.threadedregions.scheduler.RegionScheduler getRegionScheduler() {
         return this.regionizedScheduler;
@@ -396,6 +_,11 @@
     }
     // Paper end - Folia reagion threading API
 
+    @Override
+    public CommonAPI getVarilxCommon() {
+        return this.commonAPI;
+    }
+
     static {
         ConfigurationSerialization.registerClass(CraftOfflinePlayer.class);
         ConfigurationSerialization.registerClass(CraftPlayerProfile.class);
@@ -406,6 +_,8 @@
 
     public CraftServer(DedicatedServer console, PlayerList playerList) {
         this.console = console;
+        this.commonAPI = new CommonAPI("varilx");
+        this.commonAPI.enable();
         this.playerList = (DedicatedPlayerList) playerList;
         this.playerView = Collections.unmodifiableList(Lists.transform(playerList.players, new Function<ServerPlayer, CraftPlayer>() {
             @Override
