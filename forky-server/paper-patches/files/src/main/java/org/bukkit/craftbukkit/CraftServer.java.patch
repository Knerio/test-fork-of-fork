--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -13,6 +_,7 @@
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import com.mojang.serialization.Dynamic;
 import com.mojang.serialization.Lifecycle;
+import de.varilx.core.common.CommonAPI;
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
 import java.awt.image.BufferedImage;
 import java.io.ByteArrayOutputStream;
@@ -32,6 +_,7 @@
 import java.util.List;
 import java.util.Locale;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Optional;
 import java.util.Set;
 import java.util.UUID;
@@ -41,6 +_,8 @@
 import java.util.stream.Collectors;
 import javax.imageio.ImageIO;
 // import jline.console.ConsoleReader;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.title.Title;
 import net.minecraft.advancements.AdvancementHolder;
 import net.minecraft.commands.CommandSourceStack;
 import net.minecraft.commands.Commands;
@@ -319,6 +_,8 @@
     private final io.papermc.paper.threadedregions.scheduler.FoliaAsyncScheduler asyncScheduler = new io.papermc.paper.threadedregions.scheduler.FoliaAsyncScheduler();
     private final io.papermc.paper.threadedregions.scheduler.FoliaGlobalRegionScheduler globalRegionScheduler = new io.papermc.paper.threadedregions.scheduler.FoliaGlobalRegionScheduler();
 
+    private final CommonAPI commonAPI; // Varilx
+
     @Override
     public final io.papermc.paper.threadedregions.scheduler.RegionScheduler getRegionScheduler() {
         return this.regionizedScheduler;
@@ -396,6 +_,11 @@
     }
     // Paper end - Folia reagion threading API
 
+    @Override
+    public CommonAPI getVarilxCommon() {
+        return this.commonAPI;
+    }
+
     static {
         ConfigurationSerialization.registerClass(CraftOfflinePlayer.class);
         ConfigurationSerialization.registerClass(CraftPlayerProfile.class);
@@ -406,6 +_,8 @@
 
     public CraftServer(DedicatedServer console, PlayerList playerList) {
         this.console = console;
+        this.commonAPI = new CommonAPI("varilx");
+        this.commonAPI.enable();
         this.playerList = (DedicatedPlayerList) playerList;
         this.playerView = Collections.unmodifiableList(Lists.transform(playerList.players, new Function<ServerPlayer, CraftPlayer>() {
             @Override
@@ -2154,6 +_,98 @@
         this.console.halt(false);
     }
 
+
+    // Varilx Start
+
+    @Override
+    public void sendTranslatedMessage(@NotNull final String key, final @NotNull Object... args) {
+        this.sendMessage(Bukkit.getVarilxCommon().getTranslationService().getDefaultComponent(key, args));
+    }
+
+    @Override
+    public void sendTranslatedMessage(@NotNull final String key, @NotNull final String project, final de.varilx.core.common.translation.@NotNull Locale locale, final @NotNull Object... args) {
+        this.sendMessage(Bukkit.getVarilxCommon().getTranslationService().getComponent(key, project, locale, args));
+    }
+
+    @Override
+    public void showTranslatedTitle(@NotNull final String titleKey, final @NotNull Object... args) {
+        this.showTranslatedTitle(titleKey, Title.DEFAULT_TIMES, args);
+    }
+
+    @Override
+    public void showTranslatedTitle(@NotNull final String titleKey, @NotNull final String project, final de.varilx.core.common.translation.@NotNull Locale locale, final @NotNull Object... args) {
+        this.showTranslatedTitle(titleKey, project, locale, Title.DEFAULT_TIMES, args);
+    }
+
+    @Override
+    public void showTranslatedTitle(@NotNull final String titleKey, final Title.@NotNull Times times, final @NotNull Object... args) {
+        final List<net.kyori.adventure.text.Component> components = Bukkit.getVarilxCommon().getTranslationService().getDefaultComponents(titleKey, args);
+        this.showTitle(Title.title(components.getFirst(), components.getLast(), times));
+    }
+
+    @Override
+    public void showTranslatedTitle(@NotNull final String titleKey, @NotNull final String project, final Title.@NotNull Times times, final @NotNull Object... args) {
+        this.showTranslatedTitle(titleKey, project, de.varilx.core.common.translation.Locale.DE, Title.DEFAULT_TIMES, args);
+    }
+
+    @Override
+    public void showTranslatedTitle(@NotNull final String titleKey, @NotNull final String project, final de.varilx.core.common.translation.@NotNull Locale locale, final Title.@NotNull Times times, final @NotNull Object... args) {
+        final List<net.kyori.adventure.text.Component> components = Bukkit.getVarilxCommon().getTranslationService().getComponents(titleKey, project, locale, args);
+        this.showTitle(Title.title(components.getFirst(), components.getLast(), times));
+    }
+
+    @Override
+    public void showTranslatedBossbar(final String bossbarKey, final Object... args) {
+        net.kyori.adventure.text.Component title = Bukkit.getVarilxCommon().getTranslationService().getDefaultComponent(bossbarKey, (Object[]) args);
+        this.showBossBar(net.kyori.adventure.bossbar.BossBar.bossBar(title, 0f, net.kyori.adventure.bossbar.BossBar.Color.GREEN, net.kyori.adventure.bossbar.BossBar.Overlay.PROGRESS));
+    }
+
+    @Override
+    public void showTranslatedBossbar(final String bossbarKey, final net.kyori.adventure.bossbar.BossBar bossBar, final Object... args) {
+        net.kyori.adventure.text.Component title = Bukkit.getVarilxCommon().getTranslationService().getDefaultComponent(bossbarKey, (Object[]) args);
+        bossBar.name(title);
+        this.showBossBar(bossBar);
+    }
+
+    @Override
+    public void showTranslatedBossbar(final String bossbarKey, final String project, final net.kyori.adventure.bossbar.BossBar bossBar, final Object... args) {
+        this.showTranslatedBossbar(bossbarKey, project, de.varilx.core.common.translation.Locale.DE, bossBar, args);
+    }
+
+    @Override
+    public void showTranslatedBossbar(final String bossbarKey, final String project, final de.varilx.core.common.translation.Locale locale, final net.kyori.adventure.bossbar.BossBar bossBar, final Object... args) {
+        net.kyori.adventure.text.Component title = Bukkit.getVarilxCommon().getTranslationService().getComponent(bossbarKey, project, locale, (Object[]) args);
+        bossBar.name(title);
+        this.showBossBar(bossBar);
+    }
+
+    @Override
+    public void sendTranslatedActionBar(final String messageKey, final Object... args) {
+        this.sendActionBar(Bukkit.getVarilxCommon().getTranslationService().getDefaultComponent(messageKey, args));
+    }
+
+    @Override
+    public void sendTranslatedActionBar(final String messageKey, final String project, final de.varilx.core.common.translation.Locale locale, final Object... args) {
+        this.sendActionBar(Bukkit.getVarilxCommon().getTranslationService().getComponent(messageKey, project, locale, args));
+    }
+
+    @Override
+    public int translatedBroadcast(@NotNull final String messageKey, final @NotNull Object[] args) {
+        return this.broadcast(Bukkit.getVarilxCommon().getTranslationService().getDefaultComponent(messageKey, args));
+    }
+
+    @Override
+    public int translatedBroadcast(@NotNull final String messageKey, @NotNull final String project, final @NotNull Object[] args) {
+        return this.translatedBroadcast(messageKey, project, de.varilx.core.common.translation.Locale.DE, args);
+    }
+
+    @Override
+    public int translatedBroadcast(@NotNull final String messageKey, @NotNull final String project, final de.varilx.core.common.translation.@NotNull Locale locale, final @NotNull Object[] args) {
+        return this.broadcast(Bukkit.getVarilxCommon().getTranslationService().getComponent(messageKey, project, locale, args));
+    }
+
+    // Varilx End
+
     @Override
     @Deprecated // Paper
     public int broadcast(String message, String permission) {
@@ -2544,6 +_,27 @@
         return CraftInventoryCreator.INSTANCE.createInventory(owner, size, title);
     }
 
+    // Varilx - Start
+
+    @Override
+    public @NotNull Inventory createTranslatedInventory(@org.jetbrains.annotations.Nullable final InventoryHolder owner, final int size, final String titleKey, final Object[] args) {
+        Component title = Bukkit.getVarilxCommon().getTranslationService().getDefaultComponent(titleKey, args);
+        return createInventory(owner, size, title);
+    }
+
+    @Override
+    public @NotNull Inventory createTranslatedInventory(@org.jetbrains.annotations.Nullable final InventoryHolder owner, final int size, final String titleKey, final String project, final Object[] args) {
+        return this.createTranslatedInventory(owner, size, titleKey, project, de.varilx.core.common.translation.Locale.DE, args);
+    }
+
+    @Override
+    public @NotNull Inventory createTranslatedInventory(@org.jetbrains.annotations.Nullable final InventoryHolder owner, final int size, final String titleKey, final String project, final de.varilx.core.common.translation.Locale locale, final Object[] args) {
+        Component title = Bukkit.getVarilxCommon().getTranslationService().getComponent(titleKey, project, de.varilx.core.common.translation.Locale.DE, args);
+        return createInventory(owner, size, title);
+    }
+
+    // Varilx - End
+
     // Paper start
     @Override
     public Merchant createMerchant(net.kyori.adventure.text.Component title) {
@@ -3385,5 +_,11 @@
     public boolean isLagging() {
         return getServer().lagging;
     }
+
+    // Varilx start - fix version checker
+    public String getGiteaToken() {
+        return this.configuration.getString("gitea-token");
+    }
+    // Varilx end - fix version checker
     // Purpur end - Lagging threshold
 }
