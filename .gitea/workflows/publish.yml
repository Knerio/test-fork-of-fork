# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types:
      - published

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 3
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: 'gradle'
      - uses: gradle/actions/setup-gradle@v4
      - name: Configure Git
        run: git config --global user.email "no-reply@github.com" && git config --global user.name "Github Actions"
      - name: Get commit hash
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV
      - name: Set version
        run: |
          VERSION=${{ github.event.release.name }}
          if [ "${{ github.event.release.prerelease }}" = "true" ]; then
            FULL_VERSION="${VERSION}-commit-${COMMIT_HASH}"
          else
            FULL_VERSION="${VERSION}"
          fi
          echo "Setting version to $FULL_VERSION"
          sed -i "s/^version = .*/version = $FULL_VERSION/" gradle.properties
          echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_ENV
      - name: Apply Patches
        run: ./gradlew applyAllPatches --no-daemon --stacktrace
        env:
          VARILX_USER: ${{ secrets.VARILX_USER }}
          VARILX_TOKEN: ${{ secrets.VARILX_TOKEN }}
      - name: Publish
        run: ./gradlew publish --no-daemon --stacktrace
        env:
          VARILX_USER: ${{ secrets.VARILX_USER }}
          VARILX_TOKEN: ${{ secrets.VARILX_TOKEN }}
      - name: Republish on Failure
        if: ${{ failure() }}
        run: |
          ./gradlew clean cleanCache
          ./gradlew applyPatches --no-daemon --stacktrace 
          ./gradlew publish --no-daemon --stacktrace
        env:
          VARILX_USER: ${{ secrets.VARILX_USER }}
          VARILX_TOKEN: ${{ secrets.VARILX_TOKEN }}
      - name: Set build number
        run: |
          VERSION=${{ github.event.release.name }}
          sed -i "s/^version = .*/version = $VERSION/" gradle.properties
      - name: Build Mojmap Bundler Jar
        run: ./gradlew createMojmapBundlerJar
        env:
          BUILD_NUMBER: "${{ github.event.release.id }}"
      - name: Upload JAR to Release
        run: |
          FILE_NAME="purpur-bundler-${{ github.event.release.name }}-mojmap.jar"
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/java-archive" \
            --data-binary @./build/libs/$FILE_NAME \
            "${{ github.event.release.upload_url }}?name=$FILE_NAME"
      - name: Rename release
        run: |
          GITEA_DOMAIN=$(echo "${{ github.server_url }}" | sed 's~https://~~')
          OWNER=${{ github.repository_owner }}
          REPO=$(basename "${{ github.repository }}")
          RELEASE_ID=${{ github.event.release.id }}
          curl -X PATCH \
          -H "Authorization: token ${{ secrets.GITEA_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "{\"name\": \"${{ env.FULL_VERSION }}\"}" \
          "https://${GITEA_DOMAIN}/api/v1/repos/${OWNER}/${REPO}/releases/${RELEASE_ID}"